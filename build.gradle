buildscript {
    ext {
        springBootVersion = '2.0.8.RELEASE'
    }
    repositories {
        mavenLocal()
        jcenter()
        maven { url "http://repo1.maven.org/maven2/" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.0.11")
    }
}

plugins {
    id 'application'
    id 'checkstyle'
    id 'com.github.ben-manes.versions' version '0.17.0'
    id 'io.spring.dependency-management' version '1.0.6.RELEASE'
    id 'jacoco'
    id 'org.owasp.dependencycheck' version '3.1.2'
    id 'org.sonarqube' version '2.6.2'
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'pmd'
    id 'info.solidsoft.pitest' version '1.3.0'
}
apply plugin: 'net.serenity-bdd.aggregator'

group = 'uk.gov.hmcts.reform.finrem'
version = '3.0.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
    testSmoke {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }
    test {
        java.srcDir 'src/test/java'
        resources.srcDir 'src/test/resources'

    }

    functional {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDirs = ['src/functionalTests/java']


        }
        resources {
            srcDirs = ['src/functionalTests/resources']
        }

    }
}

configurations {
    functionalCompile.extendsFrom testCompile
    functionalRuntime.extendsFrom testRuntime
}

bootJar {
    manifest {
        attributes 'Implementation-Title': project.name,
            'Implementation-Version': project.version
    }
    archiveName 'finrem-document-generator.jar'
}

mainClassName = 'uk.gov.hmcts.reform.finrem.documentgenerator.DocumentGeneratorApplication'

compileJava {
    options.compilerArgs << '-parameters' << '-Xlint:deprecation'
}

compileTestJava {
    options.compilerArgs << '-Xlint:deprecation'
}

repositories {
    mavenLocal()
    jcenter()

    maven { url "https://dl.bintray.com/hmcts/hmcts-maven" }
    maven { url "http://repo.maven.apache.org/maven2" }
    maven { url 'https://repo.spring.io/libs-milestone' }
}

distributions {
    main {
        contents {
            from(file("$projectDir/lib/AI-Agent.xml")) {
                into "lib"
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

checkstyle {
    toolVersion = '7.2'
    configFile = project(':').file('checkstyle.xml')
    configProperties = ["suppressionFile": project(':').file('suppressions.xml')]
}


// make build fail on Checkstyle issues (https://github.com/gradle/gradle/issues/881)
tasks.withType(Checkstyle).each { checkstyleTask ->
    checkstyleTask.doLast {
        reports.all { report ->
            def outputFile = report.destination
            if (outputFile.exists() && outputFile.text.contains("<error ")) {
                throw new GradleException("There were checkstyle warnings! For more info check $outputFile")
            }
        }
    }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
    suppressionFile = 'dependency-check-suppressions.xml'
}

def versions = [
    commonsLang3: '3.7',
    commonsIo: '2.5',
    jsonAssert: '1.2.3',
    junit: '4.12',
    lombok: '1.16.16',
    nimbus: '5.1',
    pdfbox: '2.0.8',
    mockito: '2.8.9',
    powerMock: '1.7.3',
    puppyCrawl: '7.6',
    reformsJavaLogging: '3.0.1',
    restAssured: '3.0.3',
    serenity: '2.0.11',
    serenityCucumber: '1.1.3',
    serviceTokenGenerator: '1.0.4',
    springBoot: '2.0.8.RELEASE',
    springfoxSwagger: '2.9.0',
    springOpenFeign: '2.0.0.RELEASE',
    unirest: '1.4.9',
    wiremockVersion: '2.19.0',
    pitest: '1.3.2',
    gradlePitest: '1.3.0',
    sonarPitest: '0.5',
    ccdClient: '4.3.1'
]

configurations.all {
    resolutionStrategy {
        eachDependency { DependencyResolveDetails details ->
            if (details.requested.group in ['com.fasterxml.jackson.core', 'com.fasterxml.jackson.module', 'com.fasterxml.jackson.datatype']) {
                details.useVersion '2.9.9'
            }
        }
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBoot
    compile group: 'com.puppycrawl.tools', name: 'checkstyle', version:  versions.puppyCrawl
    compile group: 'commons-io', name: 'commons-io', version: versions.commonsIo
    compile group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger
    compile (group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: versions.springOpenFeign){
        exclude group: 'io.reactivex', module: 'io.reactivex'
        exclude group: 'io.reactivex', module: 'rxnetty'
        exclude group: 'io.reactivex', module: 'rxnetty-contexts'
        exclude group: 'io.reactivex', module: 'rxnetty-servo'
    }

    compile group: 'org.apache.commons', name: 'commons-lang3', version : versions.commonsLang3
    compile group: 'uk.gov.hmcts.reform', name: 'java-logging', version: versions.reformsJavaLogging
    compile group: 'uk.gov.hmcts.reform', name: 'java-logging-appinsights', version: versions.reformsJavaLogging
    compile group: 'uk.gov.hmcts.reform', name: 'java-logging-spring', version: versions.reformsJavaLogging
    compile group: 'uk.gov.hmcts.reform', name: 'java-logging-httpcomponents', version: versions.reformsJavaLogging
    compile (group: 'uk.gov.hmcts.reform', name:'service-auth-provider-client', version: versions.serviceTokenGenerator){
        exclude group: 'io.reactivex', module: 'io.reactivex'
        exclude group: 'io.reactivex', module: 'rxnetty'
        exclude group: 'io.reactivex', module: 'rxnetty-contexts'
        exclude group: 'io.reactivex', module: 'rxnetty-servo'
    }
    
    compile group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.13'
    compile group: 'org.pitest', name: 'pitest', version: versions.pitest
    compile group:'info.solidsoft.gradle.pitest', name: 'gradle-pitest-plugin', version: versions.gradlePitest
    compile group:'org.codehaus.sonar-plugins', name:'sonar-pitest-plugin', version: versions.sonarPitest
    compile group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    compile group: 'uk.gov.hmcts.reform', name: 'health-spring-boot-starter', version:'0.0.3'
    compile group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version:'0.0.4'
    compile group: 'uk.gov.hmcts.reform', name: 'core-case-data-store-client', version: versions.ccdClient

    testCompile group: 'com.github.tomakehurst', name:'wiremock', version: versions.wiremockVersion
    testCompile group: 'org.powermock', name:'powermock-api-mockito2', version:versions.powerMock
    testCompile group: 'org.powermock', name: 'powermock-api-mockito-common', version:versions.powerMock
    testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: versions.powerMock
    testCompile group: 'org.mockito', name: 'mockito-core', version: versions.mockito
    testCompile group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot) {
        exclude(module: 'commons-logging')
    }

    testCompile('org.springframework.security:spring-security-test')

    testSmokeCompile group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    testSmokeCompile group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testSmokeCompile sourceSets.main.runtimeClasspath
    testSmokeCompile sourceSets.test.runtimeClasspath

    runtime('org.springframework.boot:spring-boot-devtools')
    runtime("org.springframework.boot:spring-boot-properties-migrator")

    functionalCompile group: 'junit', name: 'junit', version: versions.junit
    functionalCompile group: 'net.serenity-bdd', name: 'serenity-core', version: '2.0.11'
    functionalCompile group: 'net.serenity-bdd', name: 'serenity-junit', version: '2.0.11'
    functionalCompile group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: '2.0.11'
    functionalCompile group: 'net.serenity-bdd', name: 'serenity-spring', version: '2.0.11'
    functionalCompile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.0'
    functionalCompile group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '1.0.4'
    functionalCompile group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    functionalCompile group: 'junit', name: 'junit', version: versions.junit
    functionalCompile group: 'net.serenity-bdd', name: 'serenity-cucumber', version: versions.serenityCucumber
    functionalCompile group: 'org.apache.commons', name: 'commons-lang3', version: versions.commonsLang3
    functionalCompile group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    functionalCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    functionalCompile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    functionalCompile group: 'org.pdfbox', name: 'com.springsource.org.pdfbox', version: '0.7.3'
    functionalCompile group: 'org.skyscreamer', name: 'jsonassert', version: '1.5.0'
}

    dependencies {
        functionalCompile(sourceSets.test.output)
    }

    task smoke(type: Test, description: 'Runs the smoke tests.', group: 'Verification') {
        setTestClassesDirs(sourceSets.testSmoke.output.classesDirs)
        setClasspath(sourceSets.testSmoke.runtimeClasspath)
        finalizedBy aggregate
    }

    task functional(type: Test) {
        description = "Runs functional Tests"
        setTestClassesDirs(sourceSets.functional.output.classesDirs)
        setClasspath(sourceSets.functional.runtimeClasspath)
        finalizedBy aggregate
    }

    task printVersion {
        doLast {
            print project.version
        }
    }

    pmd {
        toolVersion = "6.12.0"
        ignoreFailures = true
        sourceSets = [sourceSets.main, sourceSets.test]
        reportsDir = file("$project.buildDir/reports/pmd")
        ruleSetFiles = files("ruleset.xml")
    }

    pitest {
        targetClasses = ['**uk.gov.hmcts.reform.finrem.documentgenerator.*']
        excludedClasses = ['uk.gov.hmcts.reform.finrem.documentgenerator.config.*']
        threads = 10
        outputFormats = ['XML', 'HTML']
        timestampedReports = true
        mutationThreshold = 90
    }

    def sonarExclusions = [
        '**uk/gov/hmcts/reform/finrem/documentgenerator/config/PdfDocumentConfig.java',
        '**uk/gov/hmcts/reform/finrem/documentgenerator/model/*',
        '**uk/gov/hmcts/reform/finrem/documentgenerator/DocumentGeneratorApplication.java',
        '**uk/gov/hmcts/reform/finrem/documentgenerator/service/*'
    ]

    sonarqube {
        println "echo sonarqube"
        properties {
            property "sonar.exclusions", sonarExclusions.join(', ')
            property "sonar.dynamicAnalysis", "reuseReports"
            property "sonar.java.coveragePlugin", "jacoco"
            property "sonar.jacoco.reportPaths", "${project.buildDir}/jacoco/test.exec"
            property "sonar.dependencyCheck.reportPath", "${project.buildDir}/reports/dependency-check-report.xml"
        }
    }

    task developAddRelaseSuffix() {
        version = "${version}-SNAPSHOT"
    }

    jacocoTestReport {
        executionData(test)

        reports {
            xml {
                enabled true
            }

            html {
                enabled true
            }
        }
    }

    jacocoTestCoverageVerification {
        violationRules {
            rule {
                limit {
                    minimum = 0.8
                }
            }
        }
    }

    def debug = System.getProperty("debug")
    run {
        if (debug == 'true') {
            jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5010']
        }
    }
