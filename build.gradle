buildscript {
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.4.RELEASE")
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.1.1")
    }
}

plugins {
    id 'application'
    id 'checkstyle'
    id 'info.solidsoft.pitest' version '1.4.6'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'jacoco'
    id 'org.owasp.dependencycheck' version '5.3.0'
    id 'org.sonarqube' version '2.8'
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'pmd'
}
apply plugin: 'net.serenity-bdd.aggregator'

group = 'uk.gov.hmcts.reform.finrem'
version = '3.0.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
    testSmoke {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }

    test {
        java.srcDir 'src/test/java'
        resources.srcDir 'src/test/resources'
    }

    functional {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDirs = ['src/functionalTests/java']
        }
        resources.srcDirs = ['src/functionalTests/resources']
    }
}

configurations {
    functionalCompile.extendsFrom testCompile
    functionalRuntime.extendsFrom testRuntime
}

def versions = [
    ccdClient               : '4.6.4',
    commonsBeanUtils        : '1.9.4',
    commonsLang3            : '3.9',
    commonsIo               : '2.6',
    jsonAssert              : '1.5.0',
    junit                   : '4.13',
    lombok                  : '1.18.10',
    mockito                 : '2.8.9',
    pdfbox                  : '2.0.18',
    powerMock               : '1.7.3',
    puppyCrawl              : '7.6',
    reformHealth            : '0.0.5',
    reformLogging           : '5.1.1',
    reformPropertiesVolume  : '0.0.4',
    restAssured             : '3.0.3',
    sendLetterClient        : '2.1.1',
    serenity                : '2.1.1',
    serenityCucumber        : '1.9.50',
    serviceTokenGenerator   : '3.0.0',
    springfoxSwagger        : '2.9.2',
    springOpenFeign         : '2.1.1.RELEASE',
    springSecurityCrypto    : '5.1.5.RELEASE',
    tomcat                  : '9.0.30',
    unirest                 : '1.4.9',
    wiremockVersion         : '2.25.1'
]

dependencyManagement {
    dependencies {
        // CVE-2019-17563
        dependencySet(
            group: 'org.apache.tomcat.embed', version: versions.tomcat
        ) {
            entry 'tomcat-embed-core'
            entry 'tomcat-embed-el'
            entry 'tomcat-embed-websocket'
        }
        // CVE-2019-10086
        dependency group: 'commons-beanutils', name: 'commons-beanutils', version: versions.commonsBeanUtils
        // CVE-2018-10237
        dependency group: 'com.google.guava', name: 'guava', version: '28.1-jre'
    }
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'commons-io', name: 'commons-io', version: versions.commonsIo
    compile group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger
    compile group: 'com.puppycrawl.tools', name: 'checkstyle', version:  versions.puppyCrawl
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: versions.springOpenFeign

    compile group: 'uk.gov.hmcts.reform', name: 'core-case-data-store-client', version: versions.ccdClient
    compile group: 'uk.gov.hmcts.reform', name: 'send-letter-client', version: versions.sendLetterClient
    compile group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: versions.serviceTokenGenerator
    compile group: 'uk.gov.hmcts.reform', name: 'health-spring-boot-starter', version: versions.reformHealth
    compile group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version: versions.reformPropertiesVolume
    compile group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.reformLogging
    compile group: 'uk.gov.hmcts.reform', name: 'logging-httpcomponents', version: versions.reformLogging
    compile group: 'uk.gov.hmcts.reform', name: 'logging-spring', version: versions.reformLogging

    compile group: 'org.apache.commons', name: 'commons-lang3', version : versions.commonsLang3
    compile group: 'org.apache.pdfbox', name: 'pdfbox', version: versions.pdfbox
    compile group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    compile group: 'org.apache.tika', name: 'tika-core', version: '1.22'

    testCompile group: 'com.github.tomakehurst', name:'wiremock', version: versions.wiremockVersion
    testCompile group: 'org.powermock', name: 'powermock-api-mockito2', version: versions.powerMock
    testCompile group: 'org.powermock', name: 'powermock-api-mockito-common', version: versions.powerMock
    testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: versions.powerMock
    testCompile group: 'org.mockito', name: 'mockito-core', version: versions.mockito
    testCompile group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'

    testCompile('org.springframework.security:spring-security-test')

    testSmokeCompile group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    testSmokeCompile group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testSmokeCompile sourceSets.main.runtimeClasspath
    testSmokeCompile sourceSets.test.runtimeClasspath

    runtime('org.springframework.boot:spring-boot-devtools')
    runtime("org.springframework.boot:spring-boot-properties-migrator")

    functionalCompile group: 'junit', name: 'junit', version: versions.junit
    functionalCompile group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    functionalCompile group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    functionalCompile group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    functionalCompile group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    functionalCompile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.0'
    functionalCompile group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: versions.serviceTokenGenerator
    functionalCompile group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    functionalCompile group: 'junit', name: 'junit', version: versions.junit
    functionalCompile group: 'net.serenity-bdd', name: 'serenity-cucumber', version: versions.serenityCucumber
    functionalCompile group: 'org.apache.commons', name: 'commons-lang3', version: versions.commonsLang3
    functionalCompile group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    functionalCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    functionalCompile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    functionalCompile group: 'org.apache.pdfbox', name: 'pdfbox', version: versions.pdfbox

    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    functionalAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
}

bootJar {
    manifest {
        attributes 'Implementation-Title': project.name,
            'Implementation-Version': project.version
    }
    archiveName 'finrem-document-generator.jar'
}

mainClassName = 'uk.gov.hmcts.reform.finrem.documentgenerator.DocumentGeneratorApplication'

compileJava {
    options.compilerArgs << '-parameters' << '-Xlint:deprecation'
}

compileTestJava {
    options.compilerArgs << '-Xlint:deprecation'
}

repositories {
    mavenLocal()
    jcenter()

    maven { url "https://dl.bintray.com/hmcts/hmcts-maven" }
    maven { url "https://repo.maven.apache.org/maven2" }
    maven { url 'https://repo.spring.io/libs-milestone' }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

checkstyle {
    toolVersion = '7.8.2'
    configFile = new File(rootDir, "checkstyle.xml")
}


// make build fail on Checkstyle issues (https://github.com/gradle/gradle/issues/881)
tasks.withType(Checkstyle).each { checkstyleTask ->
    checkstyleTask.doLast {
        reports.all { report ->
            def outputFile = report.destination
            if (outputFile.exists() && outputFile.text.contains("<error ")) {
                throw new GradleException("There were checkstyle warnings! For more info check $outputFile")
            }
        }
    }
}

jacocoTestReport {
    executionData(test)

    reports {
        xml.enabled = true
        csv.enabled = false
        xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.8
            }
        }
    }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport

def sonarExclusions = [
    '**uk/gov/hmcts/reform/finrem/documentgenerator/config/PdfDocumentConfig.java',
    '**uk/gov/hmcts/reform/finrem/documentgenerator/model/*',
    '**uk/gov/hmcts/reform/finrem/documentgenerator/DocumentGeneratorApplication.java',
    '**uk/gov/hmcts/reform/finrem/documentgenerator/service/*'
]

sonarqube {
    println "echo sonarqube"
    properties {
        property "sonar.exclusions", sonarExclusions.join(', ')
        property "sonar.dynamicAnalysis", "reuseReports"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
        property "sonar.dependencyCheck.reportPath", "${project.buildDir}/reports/dependency-check-report.xml"
    }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
    suppressionFile = 'dependency-check-suppressions.xml'
}

dependencies {
    functionalCompile(sourceSets.test.output)
}

task smoke(type: Test, description: 'Runs the smoke tests.', group: 'Verification') {
    setTestClassesDirs(sourceSets.testSmoke.output.classesDirs)
    setClasspath(sourceSets.testSmoke.runtimeClasspath)
    finalizedBy aggregate
}

task functional(type: Test) {
    description = "Runs functional Tests"
    setTestClassesDirs(sourceSets.functional.output.classesDirs)
    setClasspath(sourceSets.functional.runtimeClasspath)
    finalizedBy aggregate
}

task printVersion {
    doLast {
        print project.version
    }
}

pmd {
    toolVersion = "6.12.0"
    ignoreFailures = true
    sourceSets = [sourceSets.main, sourceSets.test]
    reportsDir = file("$project.buildDir/reports/pmd")
    ruleSetFiles = files("ruleset.xml")
}

pitest {
    targetClasses = ['**uk.gov.hmcts.reform.finrem.documentgenerator.*']
    excludedClasses = ['uk.gov.hmcts.reform.finrem.documentgenerator.config.*']
    threads = 10
    outputFormats = ['XML', 'HTML']
    timestampedReports = true
    mutationThreshold = 90
}

task developAddRelaseSuffix() {
    version = "${version}-SNAPSHOT"
}

def debug = System.getProperty("debug")
run {
    if (debug == 'true') {
        jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5010']
    }
}
