buildscript {
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.3.11.RELEASE")
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.2.12")
        classpath group: 'org.sonarsource.scanner.gradle', name: 'sonarqube-gradle-plugin', version: '3.0'
    }
}

plugins {
    id 'application'
    id 'checkstyle'
    id 'com.github.ben-manes.versions' version '0.36.0'
    id 'info.solidsoft.pitest' version '1.5.1'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'jacoco'
    id 'org.owasp.dependencycheck' version '6.2.0'
    id 'org.sonarqube' version '3.0'
    id 'org.springframework.boot' version '2.3.11.RELEASE'
}
apply plugin: 'net.serenity-bdd.aggregator'

group = 'uk.gov.hmcts.reform.finrem'
version = '3.0.0'
sourceCompatibility = 11
targetCompatibility = 11

sourceSets {
    testSmoke {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }

    test {
        java.srcDir 'src/test/java'
        resources.srcDir 'src/test/resources'
    }

    functional {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDirs = ['src/functionalTests/java']
        }
        resources.srcDirs = ['src/functionalTests/resources']
    }
}

configurations {
    functionalImplementation.extendsFrom testCompile
    functionalRuntime.extendsFrom testRuntime
}

def versions = [
    ccdClient               : '4.7.3',
    commonsBeanUtils        : '1.9.4',
    commonsLang3            : '3.11',
    commonsIo               : '2.7',
    jsonAssert              : '1.5.0',
    junit                   : '4.13',
    lombok                  : '1.18.12',
    mockito                 : '3.4.6',
    pdfbox                  : '2.0.23',
    powerMock               : '2.0.7',
    powerMockCommon         : '1.7.4',
    reformLogging           : '5.1.7',
    reformPropertiesVolume  : '0.1.0',
    restAssured             : '3.0.3',
    sendLetterClient        : '2.6.0',
    serenity                : '2.2.12',
    serenityCucumber        : '1.9.51',
    serviceTokenGenerator   : '3.1.1',
    springfoxSwagger        : '2.9.2',
    springOpenFeign         : '2.1.1.RELEASE',
    tomcat                  : '9.0.63',
    unirest                 : '1.4.9',
    wiremock                : '2.27.2',
    apacheLogging           : '2.17.1',
    jackson                 : '2.14.0'
]

dependencyManagement {
    dependencies {
        // CVE-2019-17563
        dependencySet(
            group: 'org.apache.tomcat.embed', version: versions.tomcat
        ) {
            entry 'tomcat-embed-core'
            entry 'tomcat-embed-el'
            entry 'tomcat-embed-websocket'
        }
        // CVE-2019-10086
        dependency group: 'commons-beanutils', name: 'commons-beanutils', version: versions.commonsBeanUtils
        // CVE-2020-8908
        dependency group: 'com.google.guava', name: 'guava', version: '30.1-jre'
        // CVE-2020-26939
        dependency group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.61'
        // CVE-2020-13956
        dependencySet(group: 'org.apache.httpcomponents', version: '4.5.13') {
            entry 'httpclient'
            entry 'fluent-hc'
        }
        dependency group: 'org.glassfish', name: 'jakarta.el', version: '3.0.4'
        //CVE-2021-22060
        dependencySet(group: 'org.springframework', version: '5.2.22.RELEASE') {
            entry 'spring-aop'
            entry 'spring-beans'
            entry 'spring-context'
            entry 'spring-context-support'
            entry 'spring-core'
            entry 'spring-expression'
            entry 'spring-jcl'
            entry 'spring-web'
            entry 'spring-webmvc'
        }

        //CVE-2021-42550
        dependencySet(group: 'ch.qos.logback', version: '1.2.10') {
            entry 'logback-classic'
            entry 'logback-core'
        }
        //CVE-2020-36518
        dependencySet(group: 'com.fasterxml.jackson.core', version: versions.jackson) {
            entry 'jackson-databind'
            entry 'jackson-core'
            entry 'jackson-annotations'
        }
        //CVE-2022-25857
        dependencySet(group: 'org.yaml', version: '1.33') {
            entry 'snakeyaml'
        }
    }
}

dependencies {
    implementation group: 'com.sun.xml.bind', name: 'jaxb-osgi', version: '2.3.3'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
    implementation group: 'commons-io', name: 'commons-io', version: versions.commonsIo
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: versions.springOpenFeign
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: versions.apacheLogging
    implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: versions.apacheLogging
    implementation group: 'com.github.hmcts', name: 'ccd-client', version: versions.ccdClient
    implementation group: 'com.github.hmcts', name: 'send-letter-client', version: versions.sendLetterClient
    implementation group: 'com.github.hmcts', name:'service-auth-provider-java-client', version: versions.serviceTokenGenerator, {
        exclude group: 'org.apache.logging.log4j', module: 'log4j-api'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    }
    implementation group: 'com.github.hmcts', name: 'properties-volume-spring-boot-starter', version: versions.reformPropertiesVolume
    implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: versions.reformLogging
    implementation group: 'com.github.hmcts.java-logging', name: 'logging-appinsights', version: versions.reformLogging
    implementation group: 'com.github.hmcts.java-logging', name: 'logging-spring', version: versions.reformLogging
    implementation group: 'com.github.hmcts.java-logging', name: 'logging-httpcomponents', version: versions.reformLogging

    implementation group: 'org.apache.commons', name: 'commons-lang3', version : versions.commonsLang3
    implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: versions.pdfbox
    implementation group: 'org.apache.tika', name: 'tika-core', version: '1.28.4'
    implementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    testImplementation group: 'com.github.tomakehurst', name:'wiremock', version: versions.wiremock
    testImplementation group: 'org.powermock', name: 'powermock-api-mockito2', version: versions.powerMock
    testImplementation group: 'org.powermock', name: 'powermock-api-mockito-common', version: versions.powerMockCommon
    testImplementation group: 'org.powermock', name: 'powermock-module-junit4', version: versions.powerMock
    testImplementation group: 'org.mockito', name: 'mockito-core', version: versions.mockito
    testImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testImplementation('org.springframework.security:spring-security-test')

    testSmokeImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    testSmokeImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testSmokeImplementation sourceSets.main.runtimeClasspath
    testSmokeImplementation sourceSets.test.runtimeClasspath

    testCompile('com.github.hmcts:fortify-client:1.2.2:all')

    runtimeOnly('org.springframework.boot:spring-boot-devtools')
    runtimeOnly("org.springframework.boot:spring-boot-properties-migrator")

    functionalImplementation group: 'junit', name: 'junit', version: versions.junit
    functionalImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    functionalImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    functionalImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    functionalImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    functionalImplementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    functionalImplementation group: 'com.github.hmcts', name:'service-auth-provider-java-client', version: versions.serviceTokenGenerator, {
        exclude group: 'org.apache.logging.log4j', module: 'log4j-api'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    }
    functionalImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    functionalImplementation group: 'junit', name: 'junit', version: versions.junit
    functionalImplementation group: 'net.serenity-bdd', name: 'serenity-cucumber', version: versions.serenityCucumber
    functionalImplementation group: 'org.apache.commons', name: 'commons-lang3', version: versions.commonsLang3
    functionalImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    functionalImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    functionalImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    functionalImplementation group: 'org.apache.pdfbox', name: 'pdfbox', version: versions.pdfbox

    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    functionalAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
}

bootJar {
    manifest {
        attributes 'Implementation-Title': project.name,
            'Implementation-Version': project.version
    }
    archiveFileName = 'finrem-document-generator.jar'
}

mainClassName = 'uk.gov.hmcts.reform.finrem.documentgenerator.DocumentGeneratorApplication'

compileJava {
    options.compilerArgs << '-parameters' << '-Xlint:deprecation'
}

compileTestJava {
    options.compilerArgs << '-Xlint:deprecation'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url 'https://repo.spring.io/libs-milestone' }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

checkstyle.toolVersion = '8.32'
checkstyle.configFile = new File(rootDir, "checkstyle.xml")
checkstyle.maxWarnings(0)


// make build fail on Checkstyle issues (https://github.com/gradle/gradle/issues/881)
tasks.withType(Checkstyle).each { checkstyleTask ->
    checkstyleTask.doLast {
        reports.all { report ->
            def outputFile = report.destination
            if (outputFile.exists() && outputFile.text.contains("<error ")) {
                throw new GradleException("There were checkstyle warnings! For more info check $outputFile")
            }
        }
    }
}

jacocoTestReport {
    executionData(test)

    reports {
        xml.enabled = true
        csv.enabled = false
        xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.8
            }
        }
    }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport

def sonarExclusions = [
    '**uk/gov/hmcts/reform/finrem/documentgenerator/config/PdfDocumentConfig.java',
    '**uk/gov/hmcts/reform/finrem/documentgenerator/model/*',
    '**uk/gov/hmcts/reform/finrem/documentgenerator/DocumentGeneratorApplication.java',
    '**uk/gov/hmcts/reform/finrem/documentgenerator/service/*'
]

sonarqube {
    properties {
        property "sonar.exclusions", sonarExclusions.join(', ')
        property "sonar.dynamicAnalysis", "reuseReports"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
        property "sonar.dependencyCheck.reportPath", "${project.buildDir}/reports/dependency-check-report.xml"
    }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
    suppressionFile = 'dependency-check-suppressions.xml'
    analyzers {
        // Disable scanning of .NET related binaries
        assemblyEnabled = false
    }
}

dependencies {
    functionalImplementation(sourceSets.test.output)
}

task smoke(type: Test, description: 'Runs the smoke tests.', group: 'Verification') {
    setTestClassesDirs(sourceSets.testSmoke.output.classesDirs)
    setClasspath(sourceSets.testSmoke.runtimeClasspath)
    finalizedBy aggregate
}

task functional(type: Test) {
    description = "Runs functional Tests"
    setTestClassesDirs(sourceSets.functional.output.classesDirs)
    setClasspath(sourceSets.functional.runtimeClasspath)
    finalizedBy aggregate
}

task printVersion {
    doLast {
        print project.version
    }
}

pitest {
    targetClasses = ['**uk.gov.hmcts.reform.finrem.documentgenerator.*']
    excludedClasses = ['uk.gov.hmcts.reform.finrem.documentgenerator.config.*',
                       'uk.gov.hmcts.reform.finrem.documentgenerator.model.*']
    threads = 10
    outputFormats = ['XML', 'HTML']
    timestampedReports = true
    mutationThreshold = 90
}

task developAddRelaseSuffix() {
    version = "${version}-SNAPSHOT"
}

def debug = System.getProperty("debug")
run {
    if (debug == 'true') {
        jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5010']
    }
}

task fortifyScan(type: JavaExec)  {
    main = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
    classpath += sourceSets.test.runtimeClasspath
    jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}
